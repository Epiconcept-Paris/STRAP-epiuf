% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilsFiles.R
\name{filesFindReplace}
\alias{filesFindReplace}
\title{Find and Replace Text in Files in a Directory or File List}
\usage{
filesFindReplace(
  filename,
  pattern,
  replacement,
  word = FALSE,
  ignore.case = FALSE,
  listonly = FALSE
)
}
\arguments{
\item{filename}{Character or character vector. The path of the directory, a single file, or a list of files.}

\item{pattern}{Character vector. A vector of patterns to search for in the files.}

\item{replacement}{Character vector. A vector of replacements for the patterns found.}

\item{word}{Logical. If TRUE, only whole words will be replaced. Defaults to FALSE.}

\item{ignore.case}{Logical. If TRUE, the function performs a case-insensitive search. Defaults to FALSE.}

\item{listonly}{Logical. If TRUE, the function only lists the files that would be modified without actually
modifying them. Defaults to FALSE.}
}
\value{
NULL. The function modifies the files in-place, or lists them if \code{listonly = TRUE}.
}
\description{
This function searches for specified patterns in files within a directory or a given list of files
and replaces them with given text. While optimized for R scripts, the function call fileFindReplace function
that can work on any text-based files or xlsx Files.
}
\details{
The function supports case-sensitive or case-insensitive searches and can either perform the replacements
or just list the files that would be modified.
}
\examples{
\dontrun{
filesFindReplace("path/to/directory", "oldText", "newText")
filesFindReplace("path/to/file.txt", "oldText", "newText")
filesFindReplace(c("file1.txt", "file2.csv"), "oldText", "newText")
}
}
\seealso{
\code{\link{fileFindReplace}}, \code{\link{xlsxFindReplace}},\code{\link{txtFindReplace} }
}
